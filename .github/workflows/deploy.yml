name: CD

on:
  push:
    tags: ['v*']

defaults:
  run:
    shell: bash
jobs:
  deploy:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - id: cache-dependencies
        name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.venv
          key: dependencies-${{ hashFiles('**/poetry.lock') }}
          restore-keys: dependencies-

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip poetry
          poetry --version
          poetry check --no-interaction
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      - name: Add version to environment
        run: |
          echo "PROJECT_VERSION=$(poetry version --short)" >> $GITHUB_ENV

      - name: Run tests
        run: |
          poetry run pytest -v

      - name: Build artifacts
        run: |
          poetry build --no-interaction

      - name: Generate Release Notes
        run: |
          git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty='format:* %h %s' --no-merges > ".github/release_template.md"

      - name: Create Release Draft
        uses: softprops/action-gh-release@v2
        with:
          body_path: ".github/release_template.md"
          draft: true
          files: |
            dist/transcendent-${{ env.PROJECT_VERSION }}-py3-none-any.whl
            dist/transcendent-${{ env.PROJECT_VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
